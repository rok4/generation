{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Outils de g\u00e9n\u00e9ration de dalles raster et vecteur","text":"<p>Ces outils permettent le calcul des dalles de donn\u00e9es composant les pyramides exploit\u00e9es par le serveur et s'appuient essentiellement sur la librairie C++ du projet</p> <p>Ces outils sont principalement appel\u00e9s dans les scripts g\u00e9n\u00e9r\u00e9s par les outils de pr\u00e9g\u00e9n\u00e9ration.</p>"},{"location":"#installer-les-outils-debian","title":"Installer les outils (Debian)","text":"<p>Installations syst\u00e8me requises (list\u00e9es dans le paquet debian, install\u00e9es avec l'applicatif lors du <code>apt install</code>) :</p> <ul> <li><code>librok4-dev</code> (disponible sur GitHub)</li> <li><code>libcurl4-openssl-dev</code></li> <li><code>libproj-dev</code></li> <li><code>libboost-log-dev</code></li> <li><code>libboost-filesystem-dev</code></li> <li><code>libboost-system-dev</code></li> </ul> <pre><code>### librok4-dev\ncurl -o librok4-dev.deb https://github.com/rok4/core-cpp/releases/download/4.2.0/librok4-base-4.2.0-ubuntu-20.04-amd64.deb\n# or, with ceph driver\ncurl -o librok4-dev.deb https://github.com/rok4/core-cpp/releases/download/4.2.0/librok4-ceph-4.2.0-ubuntu-20.04-amd64.deb\n\napt install ./librok4-dev.deb\n\n### rok4-generation\ncurl -o rok4-generation.deb https://github.com/rok4/generation/releases/download/4.2.0/rok4-generation-4.2.0-ubuntu-20.04-amd64.deb\n\napt install ./rok4-generation.deb\n\n### installation des styles (si besoin dans les usages)\ncurl -o styles.deb https://github.com/rok4/styles/releases/download/4.2.0/rok4-styles-4.2.0-linux-all.deb\n\napt install ./styles.deb\n</code></pre>"},{"location":"#utiliser-les-outils","title":"Utiliser les outils","text":"<p>Voici la l\u00e9gende utilis\u00e9e pour identifi\u00e9 le format des images dans les documentations par commande :</p> <p></p>"},{"location":"#variables-denvironnement-utilisees","title":"Variables d'environnement utilis\u00e9es","text":"<p>Leur d\u00e9finition est contr\u00f4l\u00e9e \u00e0 l'usage.</p> <ul> <li>Pour le stockage objet<ul> <li><code>ROK4_OBJECT_READ_ATTEMPTS</code> : nombre de tentatives pour les lectures</li> <li><code>ROK4_OBJECT_WRITE_ATTEMPTS</code> : nombre de tentatives pour les \u00e9critures</li> <li><code>ROK4_OBJECT_ATTEMPTS_WAIT</code> : temps d'attente en secondes entre les tentatives</li> </ul> </li> <li>Pour le stockage S3<ul> <li><code>ROK4_S3_URL</code></li> <li><code>ROK4_S3_KEY</code></li> <li><code>ROK4_S3_SECRETKEY</code></li> </ul> </li> <li>Pour le stockage SWIFT<ul> <li><code>ROK4_SWIFT_AUTHURL</code></li> <li><code>ROK4_SWIFT_USER</code></li> <li><code>ROK4_SWIFT_PASSWD</code></li> <li><code>ROK4_SWIFT_PUBLICURL</code></li> <li>Si authentification via Swift<ul> <li><code>ROK4_SWIFT_ACCOUNT</code></li> </ul> </li> <li>Si connection via keystone (pr\u00e9sence de <code>ROK4_KEYSTONE_DOMAINID</code>)<ul> <li><code>ROK4_KEYSTONE_DOMAINID</code></li> <li><code>ROK4_KEYSTONE_PROJECTID</code></li> </ul> </li> <li><code>ROK4_SWIFT_TOKEN_FILE</code> afin de sauvegarder le token d'acc\u00e8s, et ne pas le demander si ce fichier en contient un</li> </ul> </li> <li>Pour configurer l'usage de libcurl (int\u00e9raction SWIFT et S3)<ul> <li><code>ROK4_SSL_NO_VERIFY</code></li> <li><code>HTTP_PROXY</code></li> <li><code>HTTPS_PROXY</code></li> <li><code>NO_PROXY</code></li> </ul> </li> <li>Pour le stockage CEPH<ul> <li><code>ROK4_CEPH_CONFFILE</code></li> <li><code>ROK4_CEPH_USERNAME</code></li> <li><code>ROK4_CEPH_CLUSTERNAME</code></li> </ul> </li> </ul>"},{"location":"#cache2work","title":"CACHE2WORK","text":"<p>Cet outil lit une dalle ROK4 raster et la convertit en une image TIFF non tuil\u00e9e, dont on peut choisir la compression.</p>"},{"location":"#usage","title":"Usage","text":"<p><code>cache2work -c &lt;COMPRESSION&gt; &lt;INPUT FILE/OBJECT&gt; &lt;OUTPUT FILE&gt; [-d]</code></p> <ul> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"#exemples","title":"Exemples","text":"<ul> <li><code>cache2work -c zip /home/IGN/slab.tif /home/IGN/workimage.tif</code></li> <li><code>cache2work -c zip ceph://ign/slab /home/IGN/workimage.tif</code></li> </ul>"},{"location":"#checkwork","title":"CHECKWORK","text":"<p>Cet outil prend seulement une image en entr\u00e9e et tente de la lire. Cela permet de d\u00e9tecter d'\u00e9ventuelles erreurs.</p>"},{"location":"#usage_1","title":"Usage","text":"<p><code>checkWork &lt;INPUT FILE&gt; [-h]</code></p> <ul> <li><code>-h</code> : Affiche l'aide</li> </ul>"},{"location":"#exemple","title":"Exemple","text":"<ul> <li><code>checkWork /home/IGN/source.tif</code></li> </ul>"},{"location":"#composentiff","title":"COMPOSENTIFF","text":"<p>Cet outil fusionne plusieurs images dispos\u00e9es en un dallage r\u00e9gulier en une seule. Il est utilis\u00e9 lorsqu'une image est moissonn\u00e9e en plusieurs fois \u00e0 cause de sa taille, pour recomposer l'image d\u00e9sir\u00e9e. Toutes les images en entr\u00e9e doivent voir les m\u00eame dimensions et les m\u00eame caract\u00e9ristiques.</p>"},{"location":"#usage_2","title":"Usage","text":"<p><code>composeNtiff -s &lt;DIRECTORY&gt; -g &lt;VAL&gt; &lt;VAL&gt; -c &lt;VAL&gt; &lt;OUTPUT FILE&gt; [-d]</code></p> <ul> <li><code>-s</code> : dossier contenant toutes les images du quadrillage. Elles sont lues dans l'ordre alpha-num\u00e9rique. Si il a plus d'images que n\u00e9cessaires, les derni\u00e8res ne sont pas utilis\u00e9es</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-g &lt;INTEGER&gt; &lt;INTEGER&gt;</code> : largeur et hauteur de la grille en nombre d'images</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"#exemple_1","title":"Exemple","text":"<ul> <li><code>composeNtiff -c zip -s /home/IGN/tiles/ -g 4 4 /home/IGN/workimage.tif</code></li> </ul>"},{"location":"#decimatentiff","title":"DECIMATENTIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image \u00e0 partir de plusieurs image en phase entre elles (m\u00eame r\u00e9solution et m\u00eame d\u00e9calage) en ne gardant qu'un pixel sur N. Cet outil est utilis\u00e9 pour g\u00e9n\u00e9rer une dalle d'un niveau \u00e0 partir de dalles d'un niveau inf\u00e9rieur dans le cas d'une pyramide utilisant un TileMatrixSet \"plus proche voisin\" (une valeur de la donn\u00e9e source n'est pas interpol\u00e9e et se retrouve dans les niveaux sup\u00e9rieurs). Le centre d'un pixel de l'image de sortie doit \u00eatre align\u00e9 avec un pixel d'une image en entr\u00e9e. Le niveau de d\u00e9cimation (N) est d\u00e9duit de la diff\u00e9rence de r\u00e9solution entre les entr\u00e9es et la sortie.</p> <p>Les informations sur les canaux (nombre, taille en bits et format) peuvent :</p> <ul> <li>\u00eatre fournies et des conversions \u00e0 la vol\u00e9e seront potentiellement faites sur les images n'ayant pas les m\u00eames</li> <li>ne pas \u00eatre fournies, auquel cas toutes les images en entr\u00e9e doivent avoir les m\u00eame caract\u00e9ristiques</li> </ul>"},{"location":"#usage_3","title":"Usage","text":"<p><code>decimateNtiff -c &lt;COMPRESSION&gt; &lt;INPUT FILE&gt; &lt;OUTPUT FILE&gt;  [-d]</code></p> <ul> <li><code>-f &lt;FILE&gt;</code> : fichier de configuration contenant l'image en sortie et la liste des images en entr\u00e9e, avec leur g\u00e9or\u00e9f\u00e9rencement et les masques \u00e9ventuels</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-n &lt;COLOR&gt;</code> : couleur de nodata, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence)</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p>"},{"location":"#le-fichier-de-configuration","title":"Le fichier de configuration","text":"<p>Une ligne du fichier de configuration a la forme suivante : <code>IMG &lt;CHEMIN&gt; &lt;XMIN&gt; &lt;YMAX&gt; &lt;XMAX&gt; &lt;YMIN&gt; &lt;RESX&gt; &lt;RESY&gt;</code> pour une image de donn\u00e9e ou <code>MSK &lt;CHEMIN&gt;</code> pour une image de masque.</p> <p>Par exemple : <code>IMG /home/IGN/image.tif 10 150 110 50 0.5 0.5</code>. Si  on veut associer \u00e0 cette image un masque, on mettra sur la ligne suivante <code>MSK /home/IGN/masque.tif</code>. Une ligne de masque doit toujours suivre une ligne d'image.</p> <p>La premi\u00e8re image list\u00e9e sera la sortie (avec \u00e9ventuellement son masque). Les suivantes sont les images en entr\u00e9e. La premi\u00e8re entr\u00e9e peut \u00eatre une image de fond, compatible avec celle de sortie et non avec les autres images en entr\u00e9e (qui seront d\u00e9cim\u00e9es). Seulement dans ce cas nous avons une entr\u00e9e non compatible avec les autres.</p> <p>Exemple de configuration :</p> <pre><code>IMG /home/IGN/IMAGE.tif -499    1501    1501    -499    2       2\nMSK /home/IGN/MASK.tif\nIMG /home/IGN/sources/imagefond.tif -499    1501    1501    -499    2       2\nMSK /home/IGN/sources/maskfond.tif\nIMG /home/IGN/sources/image1.tif 0       1000    1000    0       1       1\nIMG /home/IGN/sources/image2.tif 500     1500    1500    500     1       1\nMSK /home/IGN/sources/mask2.tif\n</code></pre> <p>L'image <code>/home/IGN/IMAGE.tif</code> sera \u00e9crite ainsi que son masque associ\u00e9 <code>/home/IGN/MASK.tif</code></p>"},{"location":"#exemple_2","title":"Exemple","text":"<ul> <li><code>decimateNtiff -f conf.txt -c zip -n -99999</code></li> </ul>"},{"location":"#managenodata","title":"MANAGENODATA","text":"<p>Cet outil permet d'identifier et de modifier une couleur dans une image consid\u00e9r\u00e9e comme du nodata. Il permet \u00e9galement d'\u00e9crire le masque associ\u00e9 \u00e0 l'image sur la base de cette valeur de nodata, et de r\u00e9server cette valeur au nodata (modification des pixels de donn\u00e9es de cette couleur en une autre). Dans ce dernier cas, un pixel de nodata est un pixel de la couleur cible \"reli\u00e9 au bord\" (on proprage le nodata depuis les pixels de la couleur cible en bord d'image).</p>"},{"location":"#usage_4","title":"Usage","text":"<p><code>manageNodata -target &lt;VAL&gt; [-tolerance &lt;VAL&gt;] [-touch-edges] -format &lt;VAL&gt; [-nodata &lt;VAL&gt;] [-data &lt;VAL&gt;] &lt;INPUT FILE&gt; [&lt;OUTPUT FILE&gt;] [-mask-out &lt;VAL&gt;] [-d]</code></p> <ul> <li><code>-target &lt;COLOR&gt;</code> : couleur cible, permettant d'identifier le nodata</li> <li><code>-tolerance &lt;INTEGER&gt;</code> : delta de tol\u00e9rance autour de la couleur cible</li> <li><code>-touche-edges</code> : pr\u00e9cise que le nodata a la couleur cible et \"est reli\u00e9 au bord\".</li> <li><code>-data &lt;COLOR&gt;</code> : nouvelle couleur pour la donn\u00e9e, afin de r\u00e9server la couleur cible au nodata. N'a de sens qu'avec l'option -touch-edges</li> <li><code>-nodata &lt;COLOR&gt;</code> : nouvelle couleur pour le nodata</li> <li><code>-mask-out &lt;FILE&gt;</code> : chemin vers le masque \u00e0 \u00e9crire, associ\u00e9 \u00e0 l'image en entr\u00e9e. Si aucun pixel de nodata n'est trouv\u00e9, le masque n'est pas \u00e9crit</li> <li><code>-format &lt;FORMAT&gt;</code> : format des canaux : uint8, float32</li> <li><code>-channels &lt;INTEGER&gt;</code> : nombre de canaux</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>L'image en entr\u00e9e n'est modifi\u00e9e que si une nouvelle couleur de donn\u00e9e ou de nodata diff\u00e9rente de la couleur cible est pr\u00e9cis\u00e9e, et qu'aucune image en sortie n'est pr\u00e9cis\u00e9e.</p>"},{"location":"#exemples_1","title":"Exemples","text":"<ul> <li><code>manageNodata -target 255,255,255 -touch-edges -data 254,254,254 input_image.tif output_image.tif -channels 3 -format uint8</code></li> <li><code>manageNodata -target -99999 -tolerance 10 input_image.tif -mask-out mask.tif -channels 1 -format float32</code></li> </ul>"},{"location":"#merge4tiff","title":"MERGE4TIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image \u00e0 partir 4 images de m\u00eame dimension dispos\u00e9es en carr\u00e9, en moyennant les pixels 4 par 4. L'image en sortie a les dimensions des images en entr\u00e9e. Une image \u00e0 utiliser comme fond peut \u00eatre donn\u00e9e. Il est possible de pr\u00e9ciser une valeur de gamma pour exag\u00e9rer les contrastes. Cet outil est utilis\u00e9 pour g\u00e9n\u00e9rer une dalle d'un niveau \u00e0 partir du niveau inf\u00e9rieur dans le cas d'une pyramide utilisant un TileMatrixSet de type Quad Tree.</p> <p>Les informations sur les canaux (nombre, taille en bits et format) peuvent :</p> <ul> <li>\u00eatre fournies et des conversions \u00e0 la vol\u00e9e seront potentiellement faites sur les images n'ayant pas les m\u00eames</li> <li>ne pas \u00eatre fournies, auquel cas toutes les images en entr\u00e9e doivent avoir les m\u00eame caract\u00e9ristiques</li> </ul>"},{"location":"#usage_5","title":"Usage","text":"<p><code>merge4tiff [-g &lt;VAL&gt;] -n &lt;VAL&gt; [-c &lt;VAL&gt;] [-iX &lt;FILE&gt; [-mX&lt;FILE&gt;]] -io &lt;FILE&gt; [-mo &lt;FILE&gt;]</code></p> <ul> <li><code>-g &lt;FLOAT&gt;</code> : valeur de gamma permettant d'augmenter les contrastes (si inf\u00e9rieur \u00e0 1) ou de les r\u00e9duire (si sup\u00e9rieur \u00e0 1)</li> <li><code>-n &lt;COLOR&gt;</code> : couleur de nodata, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence)</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-io &lt;FILE&gt;</code> : chemin de l'image de sortie</li> <li><code>-mo &lt;FILE&gt;</code> : chemin du masque de sortie associ\u00e9 (optionnel)</li> <li><code>-iX &lt;FILE&gt;</code> : chemin d'une image en entr\u00e9e<ul> <li>X = [1..4] : position de l'image</li> </ul> </li> </ul> <pre><code>image1 | image2\n-------+-------\nimage3 | image4\n</code></pre> <pre><code>* X = b : image de fond\n</code></pre> <ul> <li><code>-mX &lt;FILE&gt;</code> : X = [1..4] ou b, masque associ\u00e9 \u00e0 l'image en entr\u00e9e</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p>"},{"location":"#exemples_2","title":"Exemples","text":"<ul> <li><code>merge4tiff -g 1 -n 255,255,255 -c zip -ib backgroundImage.tif -i1 image1.tif -i3 image3.tif -io imageOut.tif</code></li> <li><code>merge4tiff -g 1 -n 255,255,255 -c zip -i1 image1.tif -m1 mask1.tif -i3 image3.tif -m3 mask3.tif -mo maskOut.tif  -io imageOut.tif</code></li> </ul>"},{"location":"#mergentiff","title":"MERGENTIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image, d\u00e9finie par son rectangle englobant, sa projection et la r\u00e9solution pixel, \u00e0 partir d'images g\u00e9or\u00e9f\u00e9renc\u00e9es. Ces derni\u00e8res peuvent avoir des projections et des r\u00e9solutions diff\u00e9rentes, se recouvrir, ne pas recouvrir l'int\u00e9gralit\u00e9 de l'image en sortie, avoir des caract\u00e9ristiques diff\u00e9rentes. Cet outil est utilis\u00e9 pour g\u00e9n\u00e9rer le niveau le mieux r\u00e9solu dans une pyramide \u00e0 partir des images en entr\u00e9e.</p> <p>Les informations sur les canaux (nombre, taille en bits et format) peuvent :</p> <ul> <li>\u00eatre fournies et des conversions \u00e0 la vol\u00e9e seront potentiellement faites sur les images n'ayant pas les m\u00eames</li> <li>ne pas \u00eatre fournies, auquel cas toutes les images en entr\u00e9e doivent avoir les m\u00eame caract\u00e9ristiques</li> </ul>"},{"location":"#usage_6","title":"Usage","text":"<p><code>mergeNtiff -f &lt;FILE&gt; [-r &lt;DIR&gt;] -c &lt;VAL&gt; -i &lt;VAL&gt; -n &lt;VAL&gt; [-a &lt;VAL&gt; -s &lt;VAL&gt; -b &lt;VAL&gt;]</code></p> <ul> <li><code>-f &lt;FILE&gt;</code> : fichier de configuration contenant l'image en sortie et la liste des images en entr\u00e9e, avec leur g\u00e9or\u00e9f\u00e9rencement et les masques \u00e9ventuels</li> <li><code>-g</code> : la premi\u00e8re image en entr\u00e9e dans le fichier est une image de fond. Il ne faudra pas lui appliquer l'\u00e9ventuel style fourni.</li> <li><code>-r &lt;DIRECTORY&gt;</code> : dossier racine \u00e0 utiliser pour les images dont le chemin commence par un <code>?</code> dans le fichier de configuration. Le chemin du dossier doit finir par un <code>/</code></li> <li><code>-p &lt;FILE&gt;</code> : fichier de style \u00e0 appliquer aux images avant reprojection ou r\u00e9echantillonnage</li> <li><code>-i &lt;INTERPOLATION&gt;</code> : interpolation \u00e0 utiliser pour les reprojections et le r\u00e9echantillonnage : nn (plus proche voisin), linear, bicubic, lanzos</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-n &lt;COLOR&gt;</code> : couleur de nodata, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence). Si un style est fourni, cette valeur de nodata est celle dans les donn\u00e9es source. Le nodata dans l'image en sortie est d\u00e9duit du style (ou est \u00e9gal \u00e0 celui en entr\u00e9e si le style ne modifie pas le format des donn\u00e9es).</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p>"},{"location":"#le-fichier-de-configuration_1","title":"Le fichier de configuration","text":"<p>Une ligne du fichier de configuration a la forme suivante : <code>IMG &lt;CHEMIN&gt; &lt;CRS&gt; &lt;XMIN&gt; &lt;YMAX&gt; &lt;XMAX&gt; &lt;YMIN&gt; &lt;RESX&gt; &lt;RESY&gt;</code> pour une image de donn\u00e9e ou <code>MSK &lt;CHEMIN&gt;</code> pour une image de masque.</p> <p>Par exemple : <code>IMG /home/IGN/image.tif EPSG:1234 10 150 110 50 0.5 0.5</code>. Si  on veut associer \u00e0 cette image un masque, on mettra sur la ligne suivante <code>MSK /home/IGN/masque.tif</code>. Une ligne de masque doit toujours suivre une ligne d'image. Si on souhaite pr\u00e9ciser un chemin relatif \u00e0 la racine pass\u00e9e via l'option <code>-r</code>, on mettra le chemin <code>MSK ?masque.tif</code></p> <p>La premi\u00e8re image list\u00e9e sera la sortie (avec \u00e9ventuellement son masque). Les suivantes sont les images en entr\u00e9e.</p> <p>Exemple de configuration :</p> <pre><code>IMG /home/IGN/IMAGE.tif EPSG:1234 -499    1501    1501    -499    2       2\nMSK /home/IGN/MASK.tif\nIMG /home/IGN/sources/imagefond.tif EPSG:1234  -499    1501    1501    -499    2       2\nMSK /home/IGN/sources/maskfond.tif\nIMG /home/IGN/sources/image1.tif EPSG:4567  0       1000    1000    0       1       1\nIMG /home/IGN/sources/image2.tif EPSG:4567  500     1500    1500    500     1       1\nMSK /home/IGN/sources/mask2.tif\n</code></pre> <p>L'image <code>/home/IGN/IMAGE.tif</code> sera \u00e9crite ainsi que son masque associ\u00e9 <code>/home/IGN/MASK.tif</code></p>"},{"location":"#exemples_3","title":"Exemples","text":"<ul> <li><code>mergeNtiff -f conf.txt -c zip -i bicubic -n 255,255,255</code></li> <li><code>mergeNtiff -f conf.txt -c zip -i nn -s 1 -b 32 -p gray -a float -n -99999</code></li> </ul>"},{"location":"#overlayntiff","title":"OVERLAYNTIFF","text":"<p>Cet outil g\u00e9n\u00e8re une image \u00e0 partir de plusieurs images de m\u00eame dimension et format de canal (entier non sign\u00e9 sur 8 bits ou flottant sur 32 bits) par superposition. Le calcul est fait pixel par pixel \u00e0 partir de ceux sources avec le choix du mode : par transparence, par multiplication, en tenant compte des masques associ\u00e9s... Cet outil est utilis\u00e9 lors de g\u00e9n\u00e9rations JOINCACHE lorsque plusieurs dalles de diff\u00e9rentes pyramides sont trouv\u00e9es pour une m\u00eame dalle en sortie. Les images en entr\u00e9e peuvent avoir un nombre de canaux diff\u00e9rent.</p>"},{"location":"#usage_7","title":"Usage","text":"<p><code>overlayNtiff -f &lt;FILE&gt; -m &lt;VAL&gt; -c &lt;VAL&gt; -s &lt;VAL&gt; -p &lt;VAL [-n &lt;VAL&gt;] -b &lt;VAL&gt;</code></p> <ul> <li><code>-f &lt;FILE&gt;</code> : fichier de configuration contenant l'image en sortie et la liste des images en entr\u00e9e, avec les masques \u00e9ventuels</li> <li><code>-m &lt;METHOD&gt;</code> : m\u00e9thode de fusion des pixels (toutes tiennent compte des \u00e9ventuels masques) :<ul> <li><code>ALPHATOP</code> : fusion par alpha blending</li> <li><code>MULTIPLY</code> : fusion par multiplication des valeurs des canaux</li> <li><code>TOP</code> : seul le pixel de donn\u00e9e du dessus est pris en compte</li> </ul> </li> <li><code>-b &lt;COLOR&gt;</code> : couleur de fond, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules (exemple : 255,255,255 pour du blanc sans transparence)</li> <li><code>-t &lt;COLOR&gt;</code> : couleur \u00e0 consid\u00e9rer comme transparente, valeurs d\u00e9cimales pour chaque canal, s\u00e9par\u00e9es par des virgules</li> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-p &lt;PHOTOMETRIC&gt;</code> : photom\u00e9trie : gray, rgb</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"#le-fichier-de-configuration_2","title":"Le fichier de configuration","text":"<p>Une ligne du fichier de configuration a la forme suivante : <code>&lt;CHEMIN DE L'IMAGE&gt; [&lt;CHEMIN DU MASQUE ASSOCI\u00c9&gt;]</code>.</p> <p>La premi\u00e8re image list\u00e9e sera la sortie (avec \u00e9ventuellement son masque). Les suivantes sont les images en entr\u00e9e. L'ordre a de l'importance, les premi\u00e8res images sources seront consid\u00e9r\u00e9es comme allant en dessous, quelque soit la m\u00e9thode utilis\u00e9e pour la fusion.</p> <p>Exemple de configuration :</p> <pre><code>/home/IGN/IMAGE.tif  /home/IGN/MASK.tif\n/home/IGN/sources/imagefond.tif\n/home/IGN/sources/image1.tif\n/home/IGN/sources/image2.tif /home/IGN/sources/mask2.tif\n</code></pre> <p>L'image <code>/home/IGN/IMAGE.tif</code> sera \u00e9crite ainsi que son masque associ\u00e9 <code>/home/IGN/MASK.tif</code></p>"},{"location":"#exemple_3","title":"Exemple","text":"<ul> <li><code>overlayNtiff -f conf.txt -m ALPHATOP -s 1 -c zip -p gray -t 255,255,255 -b 0</code></li> </ul>"},{"location":"#pbf2cache","title":"PBF2CACHE","text":"<p>Cet outil \u00e9crit une dalle \u00e0 partir des tuiles PBF rang\u00e9es par coordonn\u00e9es (<code>&lt;dossier racine&gt;/x/y.pbf</code>). La dalle \u00e9crite est au format ROK4, c'est-\u00e0-dire un fichier TIFF, dont les donn\u00e9es sont tuil\u00e9es : le TIFF ne sert que de conteneurs pour regrouper les tuiles PBF. L'en-t\u00eate est de taille fixe (2048 octets).</p>"},{"location":"#usage_8","title":"Usage","text":"<p><code>pbf2cache -r &lt;DIRECTORY&gt; -t &lt;VAL&gt; &lt;VAL&gt; -ultile &lt;VAL&gt; &lt;VAL&gt; &lt;OUTPUT FILE/OBJECT&gt;  [-d]</code></p> <ul> <li><code>-r &lt;DIRECTORY&gt;</code> : dossier contenant l'arborescence de tuiles PBF</li> <li><code>-t &lt;VAL&gt; &lt;VAL&gt;</code> : nombre de tuiles dans une dalle, en largeur et en hauteur</li> <li><code>-ultile &lt;VAL&gt; &lt;VAL&gt;</code> : indice de la tuile en haut \u00e0 gauche dans la dalle</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul>"},{"location":"#exemple_4","title":"Exemple","text":"<p>Avec la commande suivante : <code>pbf2cache -r /home/IGN/pbfs -t 3 2 -ultile 17 36 /home/IGN/output.tif</code> (on veut 3x2 tuiles dans une dalle, et l'indice de la tuile en haut \u00e0 gauche est (17,36)), les fichiers suivants seront cherch\u00e9s et int\u00e9gr\u00e9s \u00e0 la dalle fichier <code>/home/IGN/output.tif</code> si pr\u00e9sents dans cet ordre :</p> <ul> <li><code>/home/IGN/pbfs/17/36.pbf</code></li> <li><code>/home/IGN/pbfs/18/36.pbf</code></li> <li><code>/home/IGN/pbfs/19/36.pbf</code></li> <li><code>/home/IGN/pbfs/17/37.pbf</code></li> <li><code>/home/IGN/pbfs/18/37.pbf</code></li> <li><code>/home/IGN/pbfs/19/37.pbf</code></li> </ul> <p>Si une tuile est absente (cela arrive si elle ne devait pas contenir d'objets), on pr\u00e9cise dans la dalle que l'on a une tuile de taille 0.</p>"},{"location":"#work2cache","title":"WORK2CACHE","text":"<p>Cette commande va produire une image TIFF, tuil\u00e9e, avec une en-t\u00eate de taille fixe de 2048 octets afin que ROK4SERVER puisse ne pas la lire (toutes les informations lui sont d\u00e9j\u00e0 connues gr\u00e2ce au descripteur de pyramide).</p> <p>Par d\u00e9faut, on ne pr\u00e9cise pas les caract\u00e9ristique de l'image en sortie (nombre de canaux, format des canaux...) mais on peut pr\u00e9ciser l'ensemble pour r\u00e9aliser une conversion (passage en noir et blanc par exemple).</p> <p>La taille de tuile pr\u00e9cis\u00e9e doit \u00eatre coh\u00e9rente avec la taille totale de la dalle (doit \u00eatre un diviseur des dimensions totales).</p>"},{"location":"#usage_9","title":"Usage","text":"<p><code>work2cache -c &lt;VAL&gt; -t &lt;VAL&gt; &lt;VAL&gt; &lt;INPUT FILE&gt; &lt;OUTPUT FILE/OBJECT&gt; [-a &lt;VAL&gt; -s &lt;VAL&gt; -b &lt;VAL&gt;] [-crop]</code></p> <ul> <li><code>-c &lt;COMPRESSION&gt;</code> : compression des donn\u00e9es dans l'image TIFF en sortie : jpg, jpg90, raw (d\u00e9faut), zip, lzw, pkb, png</li> <li><code>-t &lt;INTEGER&gt; &lt;INTEGER&gt;</code> : taille pixel d'une tuile, enlargeur et hauteur. Doit \u00eatre un diviseur de la largeur et de la hauteur de l'image en entr\u00e9e</li> <li><code>-a &lt;FORMAT&gt;</code> : format des canaux : float, uint</li> <li><code>-b &lt;INTEGER&gt;</code> : nombre de bits pour un canal : 8, 32</li> <li><code>-s &lt;INTEGER&gt;</code> : nombre de canaux : 1, 2, 3, 4</li> <li><code>-crop</code> : dans le cas d'une compression des donn\u00e9es en JPEG, un bloc (16x16 pixels, base d'application de la compression) qui contient un pixel blanc est compl\u00e8tement rempli de blanc</li> <li><code>-d</code> : activation des logs de niveau DEBUG</li> </ul> <p>Les options a, b et s doivent \u00eatre toutes fournies ou aucune.</p> <p>La compression PNG a la particularit\u00e9 de ne pas \u00eatre un standard du TIFF. Une image dans ce format, propre \u00e0 ROK4, contient des tuiles qui sont des images PNG ind\u00e9pendantes, avec les en-t\u00eates PNG. Cela permet de renvoyer sans traitement une tuile au format PNG. Ce fonctionnement est calqu\u00e9 sur le format JPEG.</p>"},{"location":"#exemples_4","title":"Exemples","text":"<ul> <li>Stockage fichier sans conversion : <code>work2cache input.tif -c png -t 256 256 output.tif</code></li> <li>Stockage fichier avec conversion : <code>work2cache input.tif -c png -t 256 256 -a uint -b 8 -s 1 output.tif</code></li> <li>Stockage CEPH sans conversion : <code>work2cache input.tif -c png -t 256 256 ceph://PYRAMIDS/output.tif</code></li> <li>Stockage S3 sans conversion : <code>work2cache input.tif -c png -t 256 256 s3://PYRAMIDS/output.tif</code></li> <li>Stockage SWIFT sans conversion : <code>work2cache input.tif -c png -t 256 256 swift://PYRAMIDS/output.tif</code></li> </ul>"},{"location":"#compiler-les-outils-debian","title":"Compiler les outils (Debian)","text":""},{"location":"#dependances-supplementaires","title":"D\u00e9pendances suppl\u00e9mentaires","text":"<ul> <li><code>build-essential</code></li> <li><code>cmake</code></li> <li>Pour la documentation<ul> <li><code>doxygen</code></li> <li><code>graphviz</code></li> </ul> </li> </ul> <p><code>apt install build-essential cmake doxygen graphviz</code> </p>"},{"location":"#variables-cmake","title":"Variables CMake","text":"<ul> <li><code>BUILD_VERSION</code> : version des outils compil\u00e9s. Valeur par d\u00e9faut : <code>0.0.0</code></li> <li><code>DOC_ENABLED</code> : active la compilation de la documentation. Valeur par d\u00e9faut : <code>1</code>, <code>0</code> pour d\u00e9sactiver.</li> <li><code>DEBUG_BUILD</code> : active la compilation en mode debug. Valeur par d\u00e9faut : <code>0</code>, <code>1</code> pour activer.</li> </ul>"},{"location":"#compilation-documentation-et-installation","title":"Compilation, documentation et installation","text":"<pre><code>mkdir build &amp;&amp; cd build\ncmake -DBUILD_VERSION=4.1.0 -DCMAKE_INSTALL_PREFIX=/opt/rok4 ..\nmake\nmake doc\nmake install\n</code></pre>"},{"location":"#contribuer","title":"Contribuer","text":"<p>Consulter les directives de contribution</p>"},{"location":"CHANGELOG/","title":"Historique des versions","text":""},{"location":"CHANGELOG/#420","title":"4.2.0","text":""},{"location":"CHANGELOG/#added","title":"[Added]","text":"<ul> <li>Stockage objet (S3, Swift et Ceph) <ul> <li>Possibilit\u00e9 de d\u00e9finir un nombre de tentatives pour les lectures (1 par d\u00e9faut) : variable d'environnement <code>ROK4_OBJECT_READ_ATTEMPTS</code> </li> <li>Possibilit\u00e9 de d\u00e9finir un nombre de tentatives pour les \u00e9critures (1 par d\u00e9faut) : variable d'environnement <code>ROK4_OBJECT_WRITE_ATTEMPTS</code> </li> <li>Possibilit\u00e9 de d\u00e9finir un temps d'attente, en secondes, entre les tentatives (5 par d\u00e9faut) : variable d'environnement <code>ROK4_OBJECT_ATTEMPTS_WAIT</code></li> </ul> </li> </ul>"},{"location":"CHANGELOG/#415","title":"4.1.5","text":""},{"location":"CHANGELOG/#fixed","title":"[Fixed]","text":"<ul> <li>Outil <code>mergeNtiff</code> : correction du cas mergeNtiff + image de fond + style. L'image de fond provient d'une pyramide, donc est d\u00e9j\u00e0 au format cible. Il ne faut pas lui appliquer de style.</li> </ul>"},{"location":"CHANGELOG/#414","title":"4.1.4","text":""},{"location":"CHANGELOG/#fixed_1","title":"[Fixed]","text":"<ul> <li>Outil <code>manageNodata</code> : une erreur lors de la lecture initiale (et compl\u00e8te) de l'image de donn\u00e9es en entr\u00e9e fait sortir en erreur la commande</li> <li>Outil <code>mergeNtiff</code> : gestion correcte d'un style de pente pur (sans palette), dans le cas d'images en entr\u00e9e phas\u00e9e avec la sortie (pas de r\u00e9echantillonnage ou reprojection)</li> <li>Include de la librairie d'annuaire (stockage, proj...)</li> </ul>"},{"location":"CHANGELOG/#changed","title":"[Changed]","text":"<ul> <li>Prise en compte du nouveau nommage dans l'utilisation de l'annuaire de contexte de stockage</li> <li>Compilation avec core-cpp en librairie dynamique</li> </ul>"},{"location":"CHANGELOG/#400","title":"4.0.0","text":"<p>Le projet ROK4 a \u00e9t\u00e9 totalement refondu, dans son organisation et sa mise \u00e0 disposition. Les composants sont d\u00e9sormais disponibles dans des releases sur GitHub au format debian.</p> <p>Cette release contient les outils de g\u00e9n\u00e9ration des pyramides de donn\u00e9es, permettant les reprojections, le sous echantillonnage, ou encore la mise au format final des donn\u00e9es.</p>"},{"location":"CHANGELOG/#added_1","title":"[Added]","text":"<ul> <li>L'outil mergeNtiff peut prendre en compte un style \u00e0 appliquer aux donn\u00e9es, avant l'\u00e9ventuelle reprojection</li> </ul>"},{"location":"CHANGELOG/#changed_1","title":"[Changed]","text":"<ul> <li>Les chemins des dalles finales sont fournis dans un format pr\u00e9cisant le type de stockage : <code>(file|ceph|s3|swift)://&lt;chemin vers le fichier ou l'objet&gt;</code>. Dans le cas du stockage objet, le chemin est de la forme <code>&lt;nom du contenant&gt;/&lt;nom de l'objet&gt;</code></li> <li>Passage de la librairie PROJ \u00e0 la version 6 </li> </ul>"},{"location":"CONTRIBUTING/","title":"Directives de contribution","text":"<p>Merci d'envisager de contribuer \u00e0 ce projet !</p>"},{"location":"CONTRIBUTING/#pull-request","title":"Pull request","text":"<p>Le titre de la PR est utilis\u00e9 pour constituer automatiquement les notes de release. Vous pouvez pr\u00e9ciser en commentaire de votre PR des d\u00e9tails qui seront ajout\u00e9s dans le fichier <code>CHANGELOG.md</code> par les mainteneurs du projet.</p> <p>Le formalisme du changelog est le suivant, en markdown :</p> <pre><code>### [Added]\n\nListe de nouvelles fonctionnalit\u00e9s.\n\n### [Changed]\n\nListe de fonctionnalit\u00e9s existantes modifi\u00e9es.\n\n### [Deprecated]\n\nListe de fonctionnalit\u00e9s d\u00e9pr\u00e9ci\u00e9es.\n\n### [Removed]\n\nListe de foncitonnalit\u00e9s retir\u00e9es.\n\n### [Fixed]\n\nListe de corrections fonctionnelles.\n\n### [Security]\n\nListe de corrections de s\u00e9curit\u00e9.\n</code></pre> <p>Les parties vides, sans \u00e9l\u00e9ment \u00e0 lister, peuvent \u00eatre ignor\u00e9es.</p>"},{"location":"documentation/","title":"Documentation technique","text":""}]}